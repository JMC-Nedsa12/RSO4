#BlueJ class context
comment0.target=CreateVisibleSignature
comment0.text=\r\n\ This\ is\ an\ example\ for\ visual\ signing\ a\ pdf.\r\n\r\n\ @see\ CreateSignature\r\n\ @author\ Vakhtang\ Koroghlishvili\r\n
comment1.params=
comment1.target=boolean\ isLateExternalSigning()
comment10.params=inputFile\ signedFile\ tsaUrl
comment10.target=void\ signPDF(java.io.File,\ java.io.File,\ java.lang.String)
comment10.text=\r\n\ Sign\ pdf\ file\ and\ create\ new\ file\ that\ ends\ with\ "_signed.pdf".\r\n\r\n\ @param\ inputFile\ The\ source\ pdf\ document\ file.\r\n\ @param\ signedFile\ The\ file\ to\ be\ signed.\r\n\ @param\ tsaUrl\ optional\ TSA\ url\r\n\ @throws\ IOException\r\n
comment11.params=inputFile\ signedFile\ tsaUrl\ signatureFieldName
comment11.target=void\ signPDF(java.io.File,\ java.io.File,\ java.lang.String,\ java.lang.String)
comment11.text=\r\n\ Sign\ pdf\ file\ and\ create\ new\ file\ that\ ends\ with\ "_signed.pdf".\r\n\r\n\ @param\ inputFile\ The\ source\ pdf\ document\ file.\ It\ will\ be\ opened\ if\ it\ hasn't\ been\ opened\r\n\ before\ in\ {@link\ \#setVisibleSignDesigner(java.lang.String,\ int,\ int,\ int,\ java.io.InputStream,\ int)}.\r\n\ @param\ signedFile\ The\ file\ to\ be\ signed.\r\n\ @param\ tsaUrl\ optional\ TSA\ url\r\n\ @param\ signatureFieldName\ optional\ name\ of\ an\ existing\ (unsigned)\ signature\ field\r\n\ @throws\ IOException\r\n
comment12.params=doc\ sigFieldName
comment12.target=org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature\ findExistingSignature(org.apache.pdfbox.pdmodel.PDDocument,\ java.lang.String)
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment13.text=\r\n\ Arguments\ are\r\n\ [0]\ key\ store\r\n\ [1]\ pin\r\n\ [2]\ document\ that\ will\ be\ signed\r\n\ [3]\ image\ of\ visible\ signature\r\n\r\n\ @param\ args\r\n\ @throws\ java.security.KeyStoreException\r\n\ @throws\ java.security.cert.CertificateException\r\n\ @throws\ java.io.IOException\r\n\ @throws\ java.security.NoSuchAlgorithmException\r\n\ @throws\ java.security.UnrecoverableKeyException\r\n
comment14.params=
comment14.target=void\ usage()
comment14.text=\r\n\ This\ will\ print\ the\ usage\ for\ this\ program.\r\n
comment2.params=lateExternalSigning
comment2.target=void\ setLateExternalSigning(boolean)
comment2.text=\r\n\ Set\ late\ external\ signing.\ Enable\ this\ if\ you\ want\ to\ activate\ the\ demo\ code\ where\ the\r\n\ signature\ is\ kept\ and\ added\ in\ an\ extra\ step\ without\ using\ PDFBox\ methods.\ This\ is\ disabled\r\n\ by\ default.\r\n\r\n\ @param\ lateExternalSigning\r\n
comment3.params=
comment3.target=org.apache.pdfbox.io.MemoryUsageSetting\ getMemoryUsageSetting()
comment3.text=\r\n\ Get\ the\ memory\ usage\ setting.\r\n\r\n\ @return\ the\ memory\ usage\ setting.\r\n
comment4.params=memoryUsageSetting
comment4.target=void\ setMemoryUsageSetting(org.apache.pdfbox.io.MemoryUsageSetting)
comment4.text=\r\n\ Set\ the\ memory\ usage\ setting.\r\n\r\n\ @param\ memoryUsageSetting\ the\ memory\ usage\ setting.\r\n
comment5.params=filename\ x\ y\ zoomPercent\ imageStream\ page
comment5.target=void\ setVisibleSignDesigner(java.lang.String,\ int,\ int,\ int,\ java.io.InputStream,\ int)
comment5.text=\r\n\ Open\ the\ PDF,\ create\ and\ set\ the\ visible\ signature\ designer\ for\ a\ new\ signature\ field.\r\n\ \r\n\ @param\ filename\ path\ of\ the\ PDF\ file\r\n\ @param\ x\ position\ of\ the\ signature\ field\r\n\ @param\ y\ position\ of\ the\ signature\ field\r\n\ @param\ zoomPercent\ increase\ (positive\ value)\ or\ decrease\ (negative\ value)\ image\ with\ x\ percent.\r\n\ @param\ imageStream\ input\ stream\ of\ an\ image.\r\n\ @param\ page\ the\ signature\ should\ be\ placed\ on\r\n\ @throws\ IOException\r\n
comment6.params=zoomPercent\ imageStream
comment6.target=void\ setVisibleSignDesigner(int,\ java.io.InputStream)
comment6.text=\r\n\ Set\ visible\ signature\ designer\ for\ an\ existing\ signature\ field.\r\n\ \r\n\ @param\ zoomPercent\ increase\ (positive\ value)\ or\ decrease\ (negative\ value)\ image\ with\ x\ percent.\r\n\ @param\ imageStream\ input\ stream\ of\ an\ image.\r\n\ @throws\ IOException\r\n
comment7.params=name\ location\ reason\ preferredSize\ page\ visualSignEnabled
comment7.target=void\ setVisibleSignatureProperties(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ int,\ boolean)
comment7.text=\r\n\ Set\ visible\ signature\ properties\ for\ new\ signature\ fields.\r\n\ \r\n\ @param\ name\r\n\ @param\ location\r\n\ @param\ reason\r\n\ @param\ preferredSize\r\n\ @param\ page\r\n\ @param\ visualSignEnabled\r\n
comment8.params=name\ location\ reason\ visualSignEnabled
comment8.target=void\ setVisibleSignatureProperties(java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment8.text=\r\n\ Set\ visible\ signature\ properties\ for\ existing\ signature\ fields.\r\n\ \r\n\ @param\ name\r\n\ @param\ location\r\n\ @param\ reason\r\n\ @param\ visualSignEnabled\r\n
comment9.params=keystore\ pin
comment9.target=CreateVisibleSignature(java.security.KeyStore,\ char[])
comment9.text=\r\n\ Initialize\ the\ signature\ creator\ with\ a\ keystore\ (pkcs12)\ and\ pin\ that\r\n\ should\ be\ used\ for\ the\ signature.\r\n\r\n\ @param\ keystore\ is\ a\ pkcs12\ keystore.\r\n\ @param\ pin\ is\ the\ pin\ for\ the\ keystore\ /\ private\ key\r\n\ @throws\ KeyStoreException\ if\ the\ keystore\ has\ not\ been\ initialized\ (loaded)\r\n\ @throws\ NoSuchAlgorithmException\ if\ the\ algorithm\ for\ recovering\ the\ key\ cannot\ be\ found\r\n\ @throws\ UnrecoverableKeyException\ if\ the\ given\ password\ is\ wrong\r\n\ @throws\ CertificateException\ if\ the\ certificate\ is\ not\ valid\ as\ signing\ time\r\n\ @throws\ IOException\ if\ no\ certificate\ could\ be\ found\r\n
numComments=15
