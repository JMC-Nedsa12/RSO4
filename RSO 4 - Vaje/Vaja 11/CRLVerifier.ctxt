#BlueJ class context
comment0.target=CRLVerifier
comment0.text=\r\n\ Copied\ from\ Apache\ CXF\ 2.4.9,\ initial\ version\:\r\n\ https\://svn.apache.org/repos/asf/cxf/tags/cxf-2.4.9/distribution/src/main/release/samples/sts_issue_operation/src/main/java/demo/sts/provider/cert/\r\n\ \r\n
comment1.params=
comment1.target=CRLVerifier()
comment2.params=cert\ signDate\ additionalCerts
comment2.target=void\ verifyCertificateCRLs(java.security.cert.X509Certificate,\ java.util.Date,\ java.util.Set)
comment2.text=\r\n\ Extracts\ the\ CRL\ distribution\ points\ from\ the\ certificate\ (if\ available)\r\n\ and\ checks\ the\ certificate\ revocation\ status\ against\ the\ CRLs\ coming\ from\r\n\ the\ distribution\ points.\ Supports\ HTTP,\ HTTPS,\ FTP\ and\ LDAP\ based\ URLs.\r\n\r\n\ @param\ cert\ the\ certificate\ to\ be\ checked\ for\ revocation\r\n\ @param\ signDate\ the\ date\ when\ the\ signing\ took\ place\r\n\ @param\ additionalCerts\ set\ of\ trusted\ root\ CA\ certificates\ that\ will\ be\r\n\ used\ as\ "trust\ anchors"\ and\ intermediate\ CA\ certificates\ that\ will\ be\r\n\ used\ as\ part\ of\ the\ certification\ chain.\r\n\ @throws\ CertificateVerificationException\ if\ the\ certificate\ could\ not\ be\ verified\r\n\ @throws\ RevokedCertificateException\ if\ the\ certificate\ is\ revoked\r\n
comment3.params=crl\ cert\ signDate\ crlDistributionPointsURL
comment3.target=void\ checkRevocation(java.security.cert.X509CRL,\ java.security.cert.X509Certificate,\ java.util.Date,\ java.lang.String)
comment3.text=\r\n\ Check\ whether\ the\ certificate\ was\ revoked\ at\ signing\ time.\r\n\r\n\ @param\ crl\ certificate\ revocation\ list\r\n\ @param\ cert\ certificate\ to\ be\ checked\r\n\ @param\ signDate\ date\ the\ certificate\ was\ used\ for\ signing\r\n\ @param\ crlDistributionPointsURL\ URL\ for\ log\ message\ or\ exception\ text\r\n\ @throws\ RevokedCertificateException\ if\ the\ certificate\ was\ revoked\ at\ signing\ time\r\n
comment4.params=crlURL
comment4.target=java.security.cert.X509CRL\ downloadCRL(java.lang.String)
comment4.text=\r\n\ Downloads\ CRL\ from\ given\ URL.\ Supports\ http,\ https,\ ftp\ and\ ldap\ based\ URLs.\r\n
comment5.params=ldapURL
comment5.target=java.security.cert.X509CRL\ downloadCRLFromLDAP(java.lang.String)
comment5.text=\r\n\ Downloads\ a\ CRL\ from\ given\ LDAP\ url,\ e.g.\r\n\ ldap\://ldap.infonotary.com/dc\=identity-ca,dc\=infonotary,dc\=com\r\n
comment6.params=crlURL
comment6.target=java.security.cert.X509CRL\ downloadCRLFromWeb(java.lang.String)
comment6.text=\r\n\ Downloads\ a\ CRL\ from\ given\ HTTP/HTTPS/FTP\ URL,\ e.g.\r\n\ http\://crl.infonotary.com/crl/identity-ca.crl\r\n
comment7.params=cert
comment7.target=java.util.List\ getCrlDistributionPoints(java.security.cert.X509Certificate)
comment7.text=\r\n\ Extracts\ all\ CRL\ distribution\ point\ URLs\ from\ the\ "CRL\ Distribution\r\n\ Point"\ extension\ in\ a\ X.509\ certificate.\ If\ CRL\ distribution\ point\r\n\ extension\ is\ unavailable,\ returns\ an\ empty\ list.\r\n\ @param\ cert\r\n\ @return\ List\ of\ CRL\ distribution\ point\ URLs.\r\n\ @throws\ java.io.IOException\r\n
numComments=8
