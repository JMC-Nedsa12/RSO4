#BlueJ class context
comment0.target=OcspHelper
comment0.text=\r\n\ Helper\ Class\ for\ OCSP-Operations\ with\ bouncy\ castle.\r\n\ \r\n\ @author\ Alexis\ Suter\r\n
comment1.params=checkCertificate\ signDate\ issuerCertificate\ additionalCerts\ ocspUrl
comment1.target=OcspHelper(java.security.cert.X509Certificate,\ java.util.Date,\ java.security.cert.X509Certificate,\ java.util.Set,\ java.lang.String)
comment1.text=\r\n\ @param\ checkCertificate\ Certificate\ to\ be\ OCSP-checked\r\n\ @param\ signDate\ the\ date\ when\ the\ signing\ took\ place\r\n\ @param\ issuerCertificate\ Certificate\ of\ the\ issuer\r\n\ @param\ additionalCerts\ Set\ of\ trusted\ root\ CA\ certificates\ that\ will\ be\ used\ as\ "trust\r\n\ anchors"\ and\ intermediate\ CA\ certificates\ that\ will\ be\ used\ as\ part\ of\ the\ certification\r\n\ chain.\ All\ self-signed\ certificates\ are\ considered\ to\ be\ trusted\ root\ CA\ certificates.\ All\r\n\ the\ rest\ are\ considered\ to\ be\ intermediate\ CA\ certificates.\r\n\ @param\ ocspUrl\ where\ to\ fetch\ for\ OCSP\r\n
comment10.params=certificate\ basicResponse
comment10.target=void\ checkOcspSignature(java.security.cert.X509Certificate,\ org.bouncycastle.cert.ocsp.BasicOCSPResp)
comment10.text=\r\n\ Checks\ whether\ the\ OCSP\ response\ is\ signed\ by\ the\ given\ certificate.\r\n\ \r\n\ @param\ certificate\ the\ certificate\ to\ check\ the\ signature\r\n\ @param\ basicResponse\ OCSP\ response\ containing\ the\ signature\r\n\ @throws\ OCSPException\ when\ the\ signature\ is\ invalid\ or\ could\ not\ be\ checked\r\n\ @throws\ IOException\ if\ the\ default\ security\ provider\ can't\ be\ instantiated\r\n
comment11.params=basicResponse
comment11.target=boolean\ checkNonce(org.bouncycastle.cert.ocsp.BasicOCSPResp)
comment11.text=\r\n\ Checks\ if\ the\ nonce\ in\ the\ response\ matches.\r\n\ \r\n\ @param\ basicResponse\ Response\ to\ be\ checked\r\n\ @return\ true\ if\ the\ nonce\ is\ present\ and\ matches,\ false\ if\ nonce\ is\ missing.\r\n\ @throws\ OCSPException\ if\ the\ nonce\ is\ different\r\n
comment12.params=
comment12.target=org.bouncycastle.cert.ocsp.OCSPResp\ performRequest()
comment12.text=\r\n\ Performs\ the\ OCSP-Request,\ with\ given\ data.\r\n\ \r\n\ @return\ the\ OCSPResp,\ that\ has\ been\ fetched\ from\ the\ ocspUrl\r\n\ @throws\ IOException\r\n\ @throws\ OCSPException\r\n
comment13.params=resp
comment13.target=void\ verifyRespStatus(org.bouncycastle.cert.ocsp.OCSPResp)
comment13.text=\r\n\ Helper\ method\ to\ verify\ response\ status.\r\n\ \r\n\ @param\ resp\ OCSP\ response\r\n\ @throws\ OCSPException\ if\ the\ response\ status\ is\ not\ ok\r\n
comment14.params=
comment14.target=org.bouncycastle.cert.ocsp.OCSPReq\ generateOCSPRequest()
comment14.text=\r\n\ Generates\ an\ OCSP\ request\ and\ generates\ the\ <code>CertificateID</code>.\r\n\r\n\ @return\ OCSP\ request,\ ready\ to\ fetch\ data\r\n\ @throws\ OCSPException\r\n\ @throws\ IOException\r\n
comment15.params=
comment15.target=byte[]\ create16BytesNonce()
comment2.params=
comment2.target=java.security.cert.X509Certificate\ getCertificateToCheck()
comment2.text=\r\n\ Get\ the\ certificate\ to\ be\ OCSP-checked.\r\n\ \r\n\ @return\ The\ certificate\ to\ be\ OCSP-checked.\r\n
comment3.params=
comment3.target=org.bouncycastle.cert.ocsp.OCSPResp\ getResponseOcsp()
comment3.text=\r\n\ Performs\ and\ verifies\ the\ OCSP-Request\r\n\r\n\ @return\ the\ OCSPResp,\ when\ the\ request\ was\ successful,\ else\ a\ corresponding\ exception\ will\ be\r\n\ thrown.\ Never\ returns\ null.\r\n\r\n\ @throws\ IOException\r\n\ @throws\ OCSPException\r\n\ @throws\ RevokedCertificateException\r\n
comment4.params=
comment4.target=java.security.cert.X509Certificate\ getOcspResponderCertificate()
comment4.text=\r\n\ Get\ responder\ certificate.\ This\ is\ available\ after\ {@link\ \#getResponseOcsp()}\ has\ been\r\n\ called.\ This\ method\ should\ be\ used\ instead\ of\ {@code\ basicResponse.getCerts()[0]}\r\n\r\n\ @return\ The\ certificate\ of\ the\ responder.\r\n
comment5.params=ocspResponse
comment5.target=void\ verifyOcspResponse(org.bouncycastle.cert.ocsp.OCSPResp)
comment5.text=\r\n\ Verifies\ the\ status\ and\ the\ response\ itself\ (including\ nonce),\ but\ not\ the\ signature.\r\n\ \r\n\ @param\ ocspResponse\ to\ be\ verified\r\n\ @throws\ OCSPException\r\n\ @throws\ RevokedCertificateException\r\n\ @throws\ IOException\ if\ the\ default\ security\ provider\ can't\ be\ instantiated\r\n
comment6.params=certHolder
comment6.target=byte[]\ getKeyHashFromCertHolder(org.bouncycastle.cert.X509CertificateHolder)
comment7.params=basicResponse\ keyHash
comment7.target=void\ findResponderCertificateByKeyHash(org.bouncycastle.cert.ocsp.BasicOCSPResp,\ byte[])
comment8.params=basicResponse\ name
comment8.target=void\ findResponderCertificateByName(org.bouncycastle.cert.ocsp.BasicOCSPResp,\ org.bouncycastle.asn1.x500.X500Name)
comment9.params=resp
comment9.target=void\ checkOcspResponseFresh(org.bouncycastle.cert.ocsp.SingleResp)
numComments=16
